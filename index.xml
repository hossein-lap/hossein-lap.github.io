<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>Hossein Esmail</title>
    <link>https://hossein-lap.github.io/</link>
    <description>Recent content on Hossein Esmail</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Hos Es</copyright>
    <lastBuildDate>Fri, 31 May 2024 18:50:32 +0330</lastBuildDate><atom:link href="https://hossein-lap.github.io/index.xml" rel="self" type="application/rss+xml" /><icon>https://hossein-lap.github.io/images/ed/foo.png</icon>
    
    
    <item>
      <title>K8s Ingress LoadBalancer</title>
      <link>https://hossein-lap.github.io/notes/kubernetes/k8s-ingress-loadbalancer/</link>
      <pubDate>Fri, 31 May 2024 18:50:32 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/notes/kubernetes/k8s-ingress-loadbalancer/</guid>
      <description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="admonitionblock warning">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Warning</div>
</td>
<td class="content">
This is some note, nothing serious.
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_exposing_services_to_external_clients">Exposing services to external clients</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Few ways to make a service accessible externally:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>NodePort</code> service type</p>
</li>
<li>
<p><code>LoadBalancer</code> service type</p>
</li>
<li>
<p>Create <code>Ingress</code> resource, <em>radically different mechanism</em></p>
</li>
</ul>
</div>
</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Golang stdlib - Webserver</title>
      <link>https://hossein-lap.github.io/notes/golang/webserver/</link>
      <pubDate>Fri, 31 May 2024 16:47:17 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/notes/golang/webserver/</guid>
      <description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="admonitionblock warning">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Warning</div>
</td>
<td class="content">
This is just some notes, nothing serious.
</td>
</tr>
</tbody></table>
</div>
<div class="paragraph">
<p>We need <code>&#34;net/http&#34;</code> module to create webserver and listen to the specified port.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">import</span> <span style="color: #d0d0d0">(</span>
    <span style="color: #90a959">&#34;net/http&#34;</span>
<span style="color: #d0d0d0">)</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>we also might need these modules as well:</p>
</div>
<div class="ulist">
<ul>
<li>
<p><code>&#34;encoding/json&#34;</code> too for parsing JSON data</p>
</li>
<li>
<p><code>&#34;database/sql&#34;</code> and <code>&#34;github.com/go-sql-driver/mysql&#34;</code> to handle (my)sql/mariadb part</p>
</li>
<li>
<p><code>&#34;github.com/redi/go-redis/v9&#34;</code> to handle redis-cache</p>
</li>
</ul>
</div>
<div class="paragraph">
<p>We need a request handler struct for the http server to be able to work.</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">type</span> <span style="color: #d0d0d0;background-color: #151515">RequestHandler</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>And now we define the http server. it needs a <code>ServeHTTP()</code> function and paths
that needs to be handled (HTTP requests goes to the specified paths)</p>
</div>
<div class="listingblock">
<div class="title">main funcion</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">mux</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">http</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">NewServeMx</span><span style="color: #d0d0d0">()</span>
    <span style="color: #d0d0d0;background-color: #151515">mux</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Handle</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;/path1&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0">&amp;</span><span style="color: #d0d0d0;background-color: #151515">RequestHandler</span><span style="color: #d0d0d0">{})</span>
    <span style="color: #d0d0d0;background-color: #151515">mux</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Handle</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;/path1/&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0">&amp;</span><span style="color: #d0d0d0;background-color: #151515">RequestHandler</span><span style="color: #d0d0d0">{})</span>
    <span style="color: #d0d0d0;background-color: #151515">mux</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Handle</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;/path2&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0">&amp;</span><span style="color: #d0d0d0;background-color: #151515">RequestHandler</span><span style="color: #d0d0d0">{})</span>
    <span style="color: #d0d0d0;background-color: #151515">mux</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Handle</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;/path2/&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0">&amp;</span><span style="color: #d0d0d0;background-color: #151515">RequestHandler</span><span style="color: #d0d0d0">{})</span>
    <span style="color: #505050">/* continue */</span>
    <span style="color: #d0d0d0;background-color: #151515">http</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">ListenAndServe</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;:8080&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">mux</span><span style="color: #d0d0d0">)</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="listingblock">
<div class="title">serve function</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">h</span> <span style="color: #d0d0d0">*</span><span style="color: #d0d0d0;background-color: #151515">RequestHandler</span><span style="color: #d0d0d0">)</span> <span style="color: #d0d0d0;background-color: #151515">ServeHTTP</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">w</span> <span style="color: #d0d0d0;background-color: #151515">http</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">ResponseWriter</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">r</span> <span style="color: #d0d0d0">*</span><span style="color: #d0d0d0;background-color: #151515">http</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Requset</span><span style="color: #d0d0d0">)</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">request_type</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">r</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Method</span>
    <span style="color: #d0d0d0;background-color: #151515">tmp</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">strings</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">SplitN</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">r</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">URL</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">String</span><span style="color: #d0d0d0">(),</span> <span style="color: #90a959">&#34;/&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">3</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0;background-color: #151515">section</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">tmp</span><span style="color: #d0d0d0">[</span><span style="color: #90a959">1</span><span style="color: #d0d0d0">]</span> <span style="color: #505050">// path</span>
    <span style="color: #d0d0d0;background-color: #151515">key</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">tmp</span><span style="color: #d0d0d0">[</span><span style="color: #90a959">2</span><span style="color: #d0d0d0">]</span> <span style="color: #505050">// add data after the path</span>
    <span style="color: #d0d0d0;background-color: #151515">params</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">r</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">URL</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Query</span><span style="color: #d0d0d0">()</span>
    <span style="color: #d0d0d0;background-color: #151515">value</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">params</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Get</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">key</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0;background-color: #151515">body</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">io</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">ReadAll</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">r</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Body</span><span style="color: #d0d0d0">)</span> <span style="color: #505050">// values from curl&#39;s `--data` flag (spected to be JSON)</span>
    <span style="color: #505050">/* continue */</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_redis_handler">Redis Handler</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">cache_handler</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">client</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">redis</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">NewClient</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0">&amp;</span><span style="color: #d0d0d0;background-color: #151515">redis</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Options</span><span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">Addr</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">&#34;localhost:6349&#34;</span>
        <span style="color: #d0d0d0;background-color: #151515">Password</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">&#34;&#34;</span> <span style="color: #505050">// No password, to get it from env variables use: `os.Getenv(&#34;ENV&#34;)`</span>
        <span style="color: #d0d0d0;background-color: #151515">DB</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">0</span> <span style="color: #505050">// default db</span>
    <span style="color: #d0d0d0">})</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_mysql_handler">MySQL Handler</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">database_handler</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">sql_url</span> <span style="color: #d0d0d0">:=</span> <span style="color: #90a959">&#34;root@localhost:3360&#34;</span>
    <span style="color: #d0d0d0;background-color: #151515">db</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">sql</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Open</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;mysql&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">sql_url</span><span style="color: #d0d0d0">)</span>
    <span style="color: #aa759f">if</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">!=</span> <span style="color: #f4bf75">nil</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">pandic</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">err</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Error</span><span style="color: #d0d0d0">())</span>
    <span style="color: #d0d0d0">}</span>
    <span style="color: #aa759f">defer</span> <span style="color: #d0d0d0;background-color: #151515">db</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Close</span><span style="color: #d0d0d0">()</span>
    <span style="color: #505050">/* continue */</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_json_parser_unmarshal">JSON Parser - Unmarshal</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">type</span> <span style="color: #d0d0d0;background-color: #151515">Movie</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">Name</span> <span style="color: #d28445">string</span> <span style="color: #90a959">`json:&#34;name&#34;`</span>
    <span style="color: #d0d0d0;background-color: #151515">Publisher</span> <span style="color: #d28445">string</span> <span style="color: #90a959">`json:&#34;publisher&#34;`</span>
    <span style="color: #d0d0d0;background-color: #151515">Year</span> <span style="color: #d28445">int</span> <span style="color: #90a959">`json:&#34;year&#34;`</span>
<span style="color: #d0d0d0">}</span>

<span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">HandleMovie</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #505050">// var target map[string]any /* not optimal */</span>
    <span style="color: #aa759f">var</span> <span style="color: #d0d0d0;background-color: #151515">movie</span> <span style="color: #d0d0d0;background-color: #151515">Movie</span>

    <span style="color: #d0d0d0;background-color: #151515">input</span> <span style="color: #d0d0d0">:=</span> <span style="color: #90a959">`{
        &#34;name&#34;: &#34;Jocker&#34;,
        &#34;publisher&#34;: &#34;WB&#34;,
        &#34;year&#34;: 2019
    }`</span>

    <span style="color: #505050">// err := json.Unmarshal([]byte(input), &amp;target) /* not optimal */</span>
    <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">json</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Unmarshal</span><span style="color: #d0d0d0">([]</span><span style="color: #d28445">byte</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">input</span><span style="color: #d0d0d0">),</span> <span style="color: #d0d0d0">&amp;</span><span style="color: #d0d0d0;background-color: #151515">movie</span><span style="color: #d0d0d0">)</span> <span style="color: #505050">/* not optimal */</span>
    <span style="color: #aa759f">if</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">!=</span> <span style="color: #f4bf75">nil</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">log</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Fatalf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Unable to marshal JSON due to %s&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #505050">/* not optimal */</span>
    <span style="color: #505050">// for k, v := range target {</span>
    <span style="color: #505050">//    fmt.Printf(&#34;k: %s, v: %v\n&#34;, k, v)</span>
    <span style="color: #505050">// }</span>
    <span style="color: #d0d0d0;background-color: #151515">fmt</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Printf</span><span style="color: #d0d0d0">(</span>
        <span style="color: #90a959">&#34;Name: %s, Publisher: %s, Year: %d</span><span style="color: #8f5536">\n</span><span style="color: #90a959">&#34;</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">movie</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Name</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">movie</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Publisher</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">movie</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Year</span><span style="color: #d0d0d0">,</span>
    <span style="color: #d0d0d0">)</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="sect2">
<h3 id="_complex_json">Complex JSON</h3>
<div class="listingblock">
<div class="title"><code>assets/complex.json</code></div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="json"><span style="color: #d0d0d0">{</span><span style="color: #d0d0d0;background-color: #151515">
  </span><span style="color: #d0d0d0;background-color: #151515">&#34;name&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;James Peterson&#34;</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
  </span><span style="color: #d0d0d0;background-color: #151515">&#34;age&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">37</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
  </span><span style="color: #d0d0d0;background-color: #151515">&#34;address&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #d0d0d0">{</span><span style="color: #d0d0d0;background-color: #151515">
    </span><span style="color: #d0d0d0;background-color: #151515">&#34;line1&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;Block 78 Woodgrove Avenue 5&#34;</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
    </span><span style="color: #d0d0d0;background-color: #151515">&#34;line2&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;Unit #05-111&#34;</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
    </span><span style="color: #d0d0d0;background-color: #151515">&#34;postal&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;654378&#34;</span><span style="color: #d0d0d0;background-color: #151515">
  </span><span style="color: #d0d0d0">},</span><span style="color: #d0d0d0;background-color: #151515">
  </span><span style="color: #d0d0d0;background-color: #151515">&#34;pets&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #d0d0d0">[</span><span style="color: #d0d0d0;background-color: #151515">
    </span><span style="color: #d0d0d0">{</span><span style="color: #d0d0d0;background-color: #151515">
      </span><span style="color: #d0d0d0;background-color: #151515">&#34;name&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;Lex&#34;</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
      </span><span style="color: #d0d0d0;background-color: #151515">&#34;kind&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;Dog&#34;</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
      </span><span style="color: #d0d0d0;background-color: #151515">&#34;age&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">4</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
      </span><span style="color: #d0d0d0;background-color: #151515">&#34;color&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;Gray&#34;</span><span style="color: #d0d0d0;background-color: #151515">
    </span><span style="color: #d0d0d0">},</span><span style="color: #d0d0d0;background-color: #151515">
    </span><span style="color: #d0d0d0">{</span><span style="color: #d0d0d0;background-color: #151515">
      </span><span style="color: #d0d0d0;background-color: #151515">&#34;name&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;Faye&#34;</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
      </span><span style="color: #d0d0d0;background-color: #151515">&#34;kind&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;Cat&#34;</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
      </span><span style="color: #d0d0d0;background-color: #151515">&#34;age&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">6</span><span style="color: #d0d0d0">,</span><span style="color: #d0d0d0;background-color: #151515">
      </span><span style="color: #d0d0d0;background-color: #151515">&#34;color&#34;</span><span style="color: #d0d0d0">:</span><span style="color: #d0d0d0;background-color: #151515"> </span><span style="color: #90a959">&#34;Orange&#34;</span><span style="color: #d0d0d0;background-color: #151515">
    </span><span style="color: #d0d0d0">}</span><span style="color: #d0d0d0;background-color: #151515">
  </span><span style="color: #d0d0d0">]</span><span style="color: #d0d0d0;background-color: #151515">
</span><span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="listingblock">
<div class="title"><code>examples/complex_json/main.go</code></div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">type</span> <span style="color: #d0d0d0">(</span>
    <span style="color: #d0d0d0;background-color: #151515">FullPerson</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">Address</span> <span style="color: #d0d0d0;background-color: #151515">Address</span>
        <span style="color: #d0d0d0;background-color: #151515">Name</span>    <span style="color: #d28445">string</span>
        <span style="color: #d0d0d0;background-color: #151515">Pets</span>    <span style="color: #d0d0d0">[]</span><span style="color: #d0d0d0;background-color: #151515">Pet</span>
        <span style="color: #d0d0d0;background-color: #151515">Age</span>     <span style="color: #d28445">int</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">Pet</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">Name</span>  <span style="color: #d28445">string</span>
        <span style="color: #d0d0d0;background-color: #151515">Kind</span>  <span style="color: #d28445">string</span>
        <span style="color: #d0d0d0;background-color: #151515">Color</span> <span style="color: #d28445">string</span>
        <span style="color: #d0d0d0;background-color: #151515">Age</span>   <span style="color: #d28445">int</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">Address</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">Line1</span>  <span style="color: #d28445">string</span>
        <span style="color: #d0d0d0;background-color: #151515">Line2</span>  <span style="color: #d28445">string</span>
        <span style="color: #d0d0d0;background-color: #151515">Postal</span> <span style="color: #d28445">string</span>
    <span style="color: #d0d0d0">}</span>
<span style="color: #d0d0d0">)</span>


<span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">b</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">os</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">ReadFile</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;assets/complex.json&#34;</span><span style="color: #d0d0d0">)</span>
    <span style="color: #aa759f">if</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">!=</span> <span style="color: #f4bf75">nil</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">log</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Fatalf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Unable to read file due to %s</span><span style="color: #8f5536">\n</span><span style="color: #90a959">&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #aa759f">var</span> <span style="color: #d0d0d0;background-color: #151515">person</span> <span style="color: #d0d0d0;background-color: #151515">FullPerson</span>

    <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">=</span> <span style="color: #d0d0d0;background-color: #151515">json</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Unmarshal</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">b</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0">&amp;</span><span style="color: #d0d0d0;background-color: #151515">person</span><span style="color: #d0d0d0">)</span>
    <span style="color: #aa759f">if</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">!=</span> <span style="color: #f4bf75">nil</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">log</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Fatalf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Unable to marshal JSON due to %s&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">litter</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Dump</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">person</span><span style="color: #d0d0d0">)</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_common_pitfalls_with_json_unmarshalling_in_go">Common pitfalls with JSON unmarshalling in Go</h3>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Extra fields are omitted in the target struct</p>
</li>
<li>
<p>Missing fields fallback to zero values</p>
</li>
<li>
<p>Unmarshalling is case insensitive</p>
</li>
<li>
<p>Field names must match JSON keys exactly</p>
</li>
<li>
<p>Type aliases are preserved</p>
</li>
</ol>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_json_parser_marshal">JSON Parser - Marshal</h2>
<div class="sectionbody">
<div class="paragraph">
<p>The <code>json.Marshal()</code> method does the opposite of <code>Unmarshal()</code> by converting
a given data structure into a JSON.</p>
</div>
<div class="listingblock">
<div class="title">examples/basic_marshal/main.go</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">marshal</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">in</span> <span style="color: #d0d0d0;background-color: #151515">any</span><span style="color: #d0d0d0">)</span> <span style="color: #d0d0d0">[]</span><span style="color: #d28445">byte</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">out</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">json</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Marshal</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">in</span><span style="color: #d0d0d0">)</span>

    <span style="color: #aa759f">if</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">!=</span> <span style="color: #f4bf75">nil</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">log</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Fatalf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Unable to marshal due to %s</span><span style="color: #8f5536">\n</span><span style="color: #90a959">&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #aa759f">return</span> <span style="color: #d0d0d0;background-color: #151515">out</span>
<span style="color: #d0d0d0">}</span>

<span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">first</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">marshal</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">14</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0;background-color: #151515">second</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">marshal</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Hello world&#34;</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0;background-color: #151515">third</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">marshal</span><span style="color: #d0d0d0">([]</span><span style="color: #d28445">float32</span><span style="color: #d0d0d0">{</span><span style="color: #90a959">1.66</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">6.86</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">10.1</span><span style="color: #d0d0d0">})</span>
    <span style="color: #d0d0d0;background-color: #151515">fourth</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">marshal</span><span style="color: #d0d0d0">(</span><span style="color: #aa759f">map</span><span style="color: #d0d0d0">[</span><span style="color: #d28445">string</span><span style="color: #d0d0d0">]</span><span style="color: #d28445">int</span><span style="color: #d0d0d0">{</span><span style="color: #90a959">&#34;num&#34;</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">15</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">&#34;other&#34;</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">17</span><span style="color: #d0d0d0">})</span>
    <span style="color: #d0d0d0;background-color: #151515">fmt</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Printf</span><span style="color: #d0d0d0">(</span>
        <span style="color: #90a959">&#34;first: %s</span><span style="color: #8f5536">\n</span><span style="color: #90a959">second: %s</span><span style="color: #8f5536">\n</span><span style="color: #90a959">third: %s</span><span style="color: #8f5536">\n</span><span style="color: #90a959">fourth: %s</span><span style="color: #8f5536">\n</span><span style="color: #90a959">&#34;</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">first</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">second</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">third</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">fourth</span><span style="color: #d0d0d0">,</span>
    <span style="color: #d0d0d0">)</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="sect2">
<h3 id="_structs">structs</h3>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">p</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">Person</span><span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">Name</span><span style="color: #d0d0d0">:</span>  <span style="color: #90a959">&#34;John Jones&#34;</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">Age</span><span style="color: #d0d0d0">:</span>   <span style="color: #90a959">26</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">Email</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">&#34;johnjones@email.com&#34;</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">Phone</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">&#34;89910119&#34;</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">Hobbies</span><span style="color: #d0d0d0">:</span> <span style="color: #d0d0d0">[]</span><span style="color: #d28445">string</span><span style="color: #d0d0d0">{</span>
            <span style="color: #90a959">&#34;Swimming&#34;</span><span style="color: #d0d0d0">,</span>
            <span style="color: #90a959">&#34;Badminton&#34;</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0">},</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">b</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">json</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Marshal</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">p</span><span style="color: #d0d0d0">)</span>
    <span style="color: #aa759f">if</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">!=</span> <span style="color: #f4bf75">nil</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">log</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Fatalf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Unable to marshal due to %s</span><span style="color: #8f5536">\n</span><span style="color: #90a959">&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">fmt</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Println</span><span style="color: #d0d0d0">(</span><span style="color: #d28445">string</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">b</span><span style="color: #d0d0d0">))</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
If you wish to format the JSON object, you can use the <code>MarshalIndent()</code> method
which performs the same function as <code>Marshal()</code> but applies some indentation to
format the output.
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="_customizing_json_field_names_with_struct_tags">Customizing JSON field names with struct tags</h3>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">type</span> <span style="color: #d0d0d0;background-color: #151515">Dog</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">Breed</span>         <span style="color: #d28445">string</span>
    <span style="color: #d0d0d0;background-color: #151515">Name</span>          <span style="color: #d28445">string</span>
    <span style="color: #d0d0d0;background-color: #151515">FavoriteTreat</span> <span style="color: #d28445">string</span>
    <span style="color: #d0d0d0;background-color: #151515">Age</span>           <span style="color: #d28445">int</span>
<span style="color: #d0d0d0">}</span>

<span style="color: #aa759f">var</span> <span style="color: #d0d0d0;background-color: #151515">dog</span> <span style="color: #d0d0d0">=</span> <span style="color: #d0d0d0;background-color: #151515">Dog</span><span style="color: #d0d0d0">{</span>
  <span style="color: #d0d0d0;background-color: #151515">Breed</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">&#34;Golden Retriever&#34;</span><span style="color: #d0d0d0">,</span>
  <span style="color: #d0d0d0;background-color: #151515">Age</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">8</span><span style="color: #d0d0d0">,</span>
  <span style="color: #d0d0d0;background-color: #151515">Name</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">&#34;Paws&#34;</span><span style="color: #d0d0d0">,</span>
  <span style="color: #d0d0d0;background-color: #151515">FavoriteTreat</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">&#34;Kibble&#34;</span><span style="color: #d0d0d0">,</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">type</span> <span style="color: #d0d0d0;background-color: #151515">Dog</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">Breed</span>         <span style="color: #d28445">string</span> <span style="color: #90a959">`json:&#34;breed&#34;`</span>
    <span style="color: #d0d0d0;background-color: #151515">Name</span>          <span style="color: #d28445">string</span> <span style="color: #90a959">`json:&#34;name&#34;`</span>
    <span style="color: #d0d0d0;background-color: #151515">FavoriteTreat</span> <span style="color: #d28445">string</span> <span style="color: #90a959">`json:&#34;favorite_treat&#34;`</span>
    <span style="color: #d0d0d0;background-color: #151515">Age</span>           <span style="color: #d28445">int</span>    <span style="color: #90a959">`json:&#34;age&#34;`</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">input</span> <span style="color: #d0d0d0">:=</span> <span style="color: #90a959">`{
  &#34;name&#34;: &#34;Coffee&#34;,
  &#34;breed&#34;: &#34;Toy Poodle&#34;,
  &#34;age&#34;: 5,
  &#34;favorite_treat&#34;: &#34;Kibble&#34;
}`</span>

    <span style="color: #aa759f">var</span> <span style="color: #d0d0d0;background-color: #151515">coffee</span> <span style="color: #d0d0d0;background-color: #151515">Dog</span>

    <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">json</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Unmarshal</span><span style="color: #d0d0d0">([]</span><span style="color: #d28445">byte</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">input</span><span style="color: #d0d0d0">),</span> <span style="color: #d0d0d0">&amp;</span><span style="color: #d0d0d0;background-color: #151515">coffee</span><span style="color: #d0d0d0">)</span>
    <span style="color: #aa759f">if</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">!=</span> <span style="color: #f4bf75">nil</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">log</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Fatalf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Unable to marshal JSON due to %s&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">litter</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Dump</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">coffee</span><span style="color: #d0d0d0">)</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_other_uses_of_struct_tags">Other uses of struct tags</h3>
<div class="listingblock">
<div class="title">Omit an empty field (one with its zero value in Go)</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">type</span> <span style="color: #d0d0d0;background-color: #151515">User</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">Username</span> <span style="color: #d28445">string</span>   <span style="color: #90a959">`json:&#34;username&#34;`</span>
    <span style="color: #d0d0d0;background-color: #151515">Password</span> <span style="color: #d28445">string</span>   <span style="color: #90a959">`json:&#34;-&#34;`</span>

    <span style="color: #d0d0d0;background-color: #151515">Email</span>    <span style="color: #d28445">string</span>   <span style="color: #90a959">`json:&#34;email&#34;`</span>
    <span style="color: #d0d0d0;background-color: #151515">Hobbies</span>  <span style="color: #d0d0d0">[]</span><span style="color: #d28445">string</span> <span style="color: #90a959">`json:&#34;hobbies,omitempty&#34;`</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_validating_json_data">Validating JSON data</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">good</span> <span style="color: #d0d0d0">:=</span> <span style="color: #90a959">`{&#34;name&#34;: &#34;John Doe&#34;}`</span>
    <span style="color: #d0d0d0;background-color: #151515">bad</span> <span style="color: #d0d0d0">:=</span> <span style="color: #90a959">`{name: &#34;John Doe&#34;}`</span>

    <span style="color: #d0d0d0;background-color: #151515">fmt</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Println</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">json</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Valid</span><span style="color: #d0d0d0">([]</span><span style="color: #d28445">byte</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">good</span><span style="color: #d0d0d0">)))</span>
    <span style="color: #d0d0d0;background-color: #151515">fmt</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Println</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">json</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Valid</span><span style="color: #d0d0d0">([]</span><span style="color: #d28445">byte</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">bad</span><span style="color: #d0d0d0">)))</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_defining_custom_behavior_marshal_unmarshal_data">Defining custom behavior - Marshal / Unmarshal data</h2>
<div class="sectionbody">
<div class="paragraph">
<p>In Go, you can define custom behavior for marshalling data by implementing the
<code>json.Marshaler</code> interface. This interface defines a single method,
<code>MarshalJSON()</code> which takes no arguments and returns a byte slice and an
error.</p>
</div>
<div class="paragraph">
<p>To implement the <code>json.Marshaler</code> interface, you need to define a new type that
wraps the original type you want to marshal. This new type should have a method
named <code>MarshalJSON()</code> that returns a byte slice and an error.</p>
</div>
<div class="listingblock">
<div class="title">examples/custom_timestamp/main.go</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">type</span> <span style="color: #d0d0d0">(</span>
    <span style="color: #d0d0d0;background-color: #151515">CustomTime</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">time</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Time</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">Baby</span> <span style="color: #aa759f">struct</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">BirthDate</span> <span style="color: #d0d0d0;background-color: #151515">CustomTime</span> <span style="color: #90a959">`json:&#34;birth_date&#34;`</span>
        <span style="color: #d0d0d0;background-color: #151515">Name</span>      <span style="color: #d28445">string</span>    <span style="color: #90a959">`json:&#34;name&#34;`</span>
        <span style="color: #d0d0d0;background-color: #151515">Gender</span>    <span style="color: #d28445">string</span>    <span style="color: #90a959">`json:&#34;gender&#34;`</span>
    <span style="color: #d0d0d0">}</span>
<span style="color: #d0d0d0">)</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>In the above snippet, we defined a new <code>CustomTime</code> type that wraps a
<code>time.Time</code> value. In is subsequently used in the <code>Baby</code> struct as the type of
the <code>BirthDate</code> value.</p>
</div>
<div class="paragraph">
<p>Here’s an example that marshals a value of type <code>Baby</code> below:</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">baby</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">Baby</span><span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">Name</span><span style="color: #d0d0d0">:</span>   <span style="color: #90a959">&#34;johnny&#34;</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">Gender</span><span style="color: #d0d0d0">:</span> <span style="color: #90a959">&#34;male&#34;</span><span style="color: #d0d0d0">,</span>
        <span style="color: #d0d0d0;background-color: #151515">BirthDate</span><span style="color: #d0d0d0">:</span> <span style="color: #d0d0d0;background-color: #151515">CustomTime</span><span style="color: #d0d0d0">{</span>
            <span style="color: #d0d0d0;background-color: #151515">time</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Date</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">2023</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">1</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">1</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">12</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">0</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">0</span><span style="color: #d0d0d0">,</span> <span style="color: #90a959">0</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">time</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Now</span><span style="color: #d0d0d0">()</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Location</span><span style="color: #d0d0d0">()),</span>
        <span style="color: #d0d0d0">},</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">b</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">:=</span> <span style="color: #d0d0d0;background-color: #151515">json</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Marshal</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">baby</span><span style="color: #d0d0d0">)</span>
    <span style="color: #aa759f">if</span> <span style="color: #d0d0d0;background-color: #151515">err</span> <span style="color: #d0d0d0">!=</span> <span style="color: #f4bf75">nil</span> <span style="color: #d0d0d0">{</span>
        <span style="color: #d0d0d0;background-color: #151515">log</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Fatalf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Unable to marshal due to %s</span><span style="color: #8f5536">\n</span><span style="color: #90a959">&#34;</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">err</span><span style="color: #d0d0d0">)</span>
    <span style="color: #d0d0d0">}</span>

    <span style="color: #d0d0d0;background-color: #151515">fmt</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Println</span><span style="color: #d0d0d0">(</span><span style="color: #d28445">string</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">b</span><span style="color: #d0d0d0">))</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p>Notice how the <code>birth_date</code> presented in the RFC 3339 format. You can now
define the custom marshalling behavior that will return a different format for
<code>CustomTime</code> values (such as <code>DD-MM-YYYY</code>) instead of the default RFC 3339
timestamp format.</p>
</div>
<div class="paragraph">
<p>You only need to define a <code>MarshalJSON()</code> method for the type as shown below:</p>
</div>
<div class="listingblock">
<div class="title">examples/custom_timestamp/main.go</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">func</span> <span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">ct</span> <span style="color: #d0d0d0;background-color: #151515">CustomTime</span><span style="color: #d0d0d0">)</span> <span style="color: #d0d0d0;background-color: #151515">MarshalJSON</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">([]</span><span style="color: #d28445">byte</span><span style="color: #d0d0d0">,</span> <span style="color: #d28445">error</span><span style="color: #d0d0d0">)</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #aa759f">return</span> <span style="color: #d0d0d0">[]</span><span style="color: #d28445">byte</span><span style="color: #d0d0d0">(</span><span style="color: #d0d0d0;background-color: #151515">fmt</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Sprintf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">`%q`</span><span style="color: #d0d0d0">,</span> <span style="color: #d0d0d0;background-color: #151515">ct</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Time</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Format</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;02-01-2006&#34;</span><span style="color: #d0d0d0">))),</span> <span style="color: #f4bf75">nil</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>WIP</title>
      <link>https://hossein-lap.github.io/welcome/</link>
      <pubDate>Sun, 26 May 2024 22:08:49 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/welcome/</guid>
      <description><![CDATA[<table class="tableblock frame-all grid-all stretch">
<colgroup>
<col style="width: 50%;"/>
<col style="width: 50%;"/>
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"></td>
<td class="tableblock halign-left valign-top"></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Welcome to my blog. I’ll be posting myown notes, ideas, programs.
I am Hossein, a programmer / DevOps engineer with passions about open-source
software and trees.</p>
<p class="tableblock">Also, I use vim btw :)</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><span class="image"><img src="/images/me/me-circle.png" alt="Me" width="250" height="250"/></span></p></td>
</tr>
</tbody>
</table>
<table class="tableblock frame-all grid-all stretch">
<colgroup>
<col style="width: 50%;"/>
<col style="width: 50%;"/>
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top"></th>
<th class="tableblock halign-left valign-top"></th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Hobbies</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Coding, Biking, Volleyball, Fishing</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Programming Languages</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Lua, Go, C, Bash</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Tools</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Linux, Git, KVM, Docker, K8S, Ansible</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><strong>Markup / Typesetting Languages</strong></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">LaTeX, groff, AsciiDoc(tor), Markdown</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"></td>
<td class="tableblock halign-left valign-top"></td>
</tr>
</tbody>
</table>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Time</title>
      <link>https://hossein-lap.github.io/blog/time/time/</link>
      <pubDate>Fri, 17 May 2024 22:42:43 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/blog/time/time/</guid>
      <description><![CDATA[
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p><strong>Insert Lead paragraph here.</strong></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_new_stuff">1. New stuff</h2>
<div class="sectionbody">
<div class="literalblock">
<div class="content">
<pre>We are new here ;)</pre>
</div>
</div>
<div class="paragraph">
<p>Unresolved directive in &lt;stdin&gt; - include::nah.txt[]</p>
</div>
</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Sample</title>
      <link>https://hossein-lap.github.io/blog/sample/</link>
      <pubDate>Tue, 02 Apr 2024 22:46:29 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/blog/sample/</guid>
      <description><![CDATA[
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p><strong>Insert Lead paragraph here.</strong></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_new_stuff">1. New stuff</h2>
<div class="sectionbody">

</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Test</title>
      <link>https://hossein-lap.github.io/blog/test/</link>
      <pubDate>Tue, 02 Apr 2024 22:45:38 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/blog/test/</guid>
      <description><![CDATA[
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p><strong>Insert Lead paragraph here.</strong></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_new_stuff">1. New stuff</h2>
<div class="sectionbody">

</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Lua Progamming Language</title>
      <link>https://hossein-lap.github.io/docs/lua/lua/</link>
      <pubDate>Tue, 02 Apr 2024 22:30:09 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/docs/lua/lua/</guid>
      <description><![CDATA[
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p><strong>Insert Lead paragraph here.</strong></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_new_stuff">New stuff</h2>
<div class="sectionbody">

</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Go Programming Language</title>
      <link>https://hossein-lap.github.io/docs/go/go/</link>
      <pubDate>Tue, 02 Apr 2024 22:30:03 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/docs/go/go/</guid>
      <description><![CDATA[
<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p><strong>Insert Lead paragraph here.</strong></p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_new_stuff">New stuff</h2>
<div class="sectionbody">
<div class="paragraph">
<p>very versile</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_more_stuff">more stuff</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="go"><span style="color: #aa759f">package</span> <span style="color: #d0d0d0;background-color: #151515">main</span>

<span style="color: #aa759f">import</span> <span style="color: #d0d0d0">(</span>
    <span style="color: #90a959">&#34;fmt&#34;</span>
<span style="color: #d0d0d0">)</span>

<span style="color: #aa759f">func</span> <span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">()</span> <span style="color: #d0d0d0">{</span>
    <span style="color: #d0d0d0;background-color: #151515">fmt</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">Printf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;This is a simple test!</span><span style="color: #8f5536">\n</span><span style="color: #90a959">&#34;</span><span style="color: #d0d0d0">)</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>AsciiDoc(tor): Yo Dawg!</title>
      <link>https://hossein-lap.github.io/docs/asciidoc/asciidoc/</link>
      <pubDate>Tue, 02 Apr 2024 22:09:44 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/docs/asciidoc/asciidoc/</guid>
      <description><![CDATA[
<div class="sect1">
<h2 id="_intro">Intro</h2>
<div class="sectionbody">
<div class="paragraph">
<p>Okay, let’s do it.</p>
</div>
<div class="listingblock">
<div class="title">Test</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="c"><span style="color: #505050">// include::{home}/.cache/wal/colors-wal-st.h[]</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_lists">Lists</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_unordered_lists">Unordered lists</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">* level 1
** level 2
*** level 3
**** level 4
***** level 5
* level 1</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 1. Output</div>
<div class="content">
<div class="ulist">
<ul>
<li>
<p>level 1</p>
<div class="ulist">
<ul>
<li>
<p>level 2</p>
<div class="ulist">
<ul>
<li>
<p>level 3</p>
<div class="ulist">
<ul>
<li>
<p>level 4</p>
<div class="ulist">
<ul>
<li>
<p>level 5</p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</li>
</ul>
</div>
</li>
<li>
<p>level 1</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_ordered_lists">Ordered lists</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">. level 1
.. level 2
... level 3
.... level 4
..... level 5
. level 1</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 2. Output</div>
<div class="content">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>level 1</p>
<div class="olist loweralpha">
<ol class="loweralpha" type="a">
<li>
<p>level 2</p>
<div class="olist lowerroman">
<ol class="lowerroman" type="i">
<li>
<p>level 3</p>
<div class="olist upperalpha">
<ol class="upperalpha" type="A">
<li>
<p>level 4</p>
<div class="olist upperroman">
<ol class="upperroman" type="I">
<li>
<p>level 5</p>
</li>
</ol>
</div>
</li>
</ol>
</div>
</li>
</ol>
</div>
</li>
</ol>
</div>
</li>
<li>
<p>level 1</p>
</li>
</ol>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_todo_lists">TODO lists</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">- [*] checked
- [x] also checked
- [ ] not checked
- normal list item</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 3. Output</div>
<div class="content">
<div class="ulist checklist">
<ul class="checklist">
<li>
<p>✓ checked</p>
</li>
<li>
<p>✓ also checked</p>
</li>
<li>
<p>❏ not checked</p>
</li>
<li>
<p>normal list item</p>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_separating_lists">Separating lists</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">. Apples
. Oranges

//-

. Walnuts
. Almonds</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 4. Output</div>
<div class="content">
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Apples</p>
</li>
<li>
<p>Oranges</p>
</li>
</ol>
</div>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Walnuts</p>
</li>
<li>
<p>Almonds</p>
</li>
</ol>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_definitions">Definitions</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_normal_definition_list">Normal definition list</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">first term:: definition of first term
section term:: definition of second term</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 5. Output</div>
<div class="content">
<div class="dlist">
<dl>
<dt class="hdlist1">first term</dt>
<dd>
<p>definition of first term</p>
</dd>
<dt class="hdlist1">section term</dt>
<dd>
<p>definition of second term</p>
</dd>
</dl>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_horizontal_definition_list">Horizontal definition list</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">[horizontal]
first term:: definition of first term
section term:: definition of second term</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 6. Output</div>
<div class="content">
<div class="hdlist">
<table>
<tbody><tr>
<td class="hdlist1">
first term
</td>
<td class="hdlist2">
<p>definition of first term</p>
</td>
</tr>
<tr>
<td class="hdlist1">
section term
</td>
<td class="hdlist2">
<p>definition of second term</p>
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_multi_line_definition_list">Multi-line definition list</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">first term::
definition of first term
section term::
definition of second term</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 7. Output</div>
<div class="content">
<div class="dlist">
<dl>
<dt class="hdlist1">first term</dt>
<dd>
<p>definition of first term</p>
</dd>
<dt class="hdlist1">section term</dt>
<dd>
<p>definition of second term</p>
</dd>
</dl>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_qa">Q&amp;A</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">[qanda]
What is Asciidoctor?::
An implementation of the AsciiDoc processor in Ruby.
What is the answer to the Ultimate Question?:: 42</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 8. Output</div>
<div class="content">
<div class="qlist qanda">
<ol>
<li>
<p><em>What is Asciidoctor?</em></p>
<p>An implementation of the AsciiDoc processor in Ruby.</p>
</li>
<li>
<p><em>What is the answer to the Ultimate Question?</em></p>
<p>42</p>
</li>
</ol>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_mixed">Mixed</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">Operating Systems::
    Linux:::
        . Fedora
            * Desktop
        . Ubuntu
            * Desktop
            * Server
    BSD:::
        . FreeBSD
        . NetBSD
Cloud Providers::
    PaaS:::
        . OpenShift
        . CloudBees
    IaaS:::
        . Amazon EC2
        . Rackspace</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 9. Output</div>
<div class="content">
<div class="dlist">
<dl>
<dt class="hdlist1">Operating Systems</dt>
<dd>
<div class="dlist">
<dl>
<dt class="hdlist1">Linux</dt>
<dd>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Fedora</p>
<div class="ulist">
<ul>
<li>
<p>Desktop</p>
</li>
</ul>
</div>
</li>
<li>
<p>Ubuntu</p>
<div class="ulist">
<ul>
<li>
<p>Desktop</p>
</li>
<li>
<p>Server</p>
</li>
</ul>
</div>
</li>
</ol>
</div>
</dd>
<dt class="hdlist1">BSD</dt>
<dd>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>FreeBSD</p>
</li>
<li>
<p>NetBSD</p>
</li>
</ol>
</div>
</dd>
</dl>
</div>
</dd>
<dt class="hdlist1">Cloud Providers</dt>
<dd>
<div class="dlist">
<dl>
<dt class="hdlist1">PaaS</dt>
<dd>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>OpenShift</p>
</li>
<li>
<p>CloudBees</p>
</li>
</ol>
</div>
</dd>
<dt class="hdlist1">IaaS</dt>
<dd>
<div class="olist arabic">
<ol class="arabic">
<li>
<p>Amazon EC2</p>
</li>
<li>
<p>Rackspace</p>
</li>
</ol>
</div>
</dd>
</dl>
</div>
</dd>
</dl>
</div>
</div>
</div>
</div>
</div>
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
Note that the indentation is optional
</td>
</tr>
</tbody></table>
</div>
</div>
<div class="sect2">
<h3 id="_complex_content_in_outline_lists">Complex content in outline lists</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">* Every list item has at least one paragraph of content,
  which may be wrapped, even using a hanging indent.
+
Additional paragraphs or blocks are adjoined by putting
a list continuation on a line adjacent to both blocks.
+
list continuation:: a plus sign (`{plus}`) on a line by itself

* A literal paragraph does not require a list continuation.

 $ gem install asciidoctor

* AsciiDoc lists may contain any complex content.
+
[cols=&#34;2&#34;, options=&#34;header&#34;]
|===
|Application
|Language
|AsciiDoc
|Python
|Asciidoctor
|Ruby
|===</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 10. Output</div>
<div class="content">
<div class="ulist">
<ul>
<li>
<p>Every list item has at least one paragraph of content,
which may be wrapped, even using a hanging indent.</p>
<div class="paragraph">
<p>Additional paragraphs or blocks are adjoined by putting
a list continuation on a line adjacent to both blocks.</p>
</div>
<div class="dlist">
<dl>
<dt class="hdlist1">list continuation</dt>
<dd>
<p>a plus sign (<code>+</code>) on a line by itself</p>
</dd>
</dl>
</div>
</li>
<li>
<p>A literal paragraph does not require a list continuation.</p>
<div class="literalblock">
<div class="content">
<pre>$ gem install asciidoctor</pre>
</div>
</div>
</li>
<li>
<p>AsciiDoc lists may contain any complex content.</p>
<table class="tableblock frame-all grid-all stretch">
<colgroup>
<col style="width: 50%;"/>
<col style="width: 50%;"/>
</colgroup>
<thead>
<tr>
<th class="tableblock halign-left valign-top">Application</th>
<th class="tableblock halign-left valign-top">Language</th>
</tr>
</thead>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">AsciiDoc</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Python</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Asciidoctor</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Ruby</p></td>
</tr>
</tbody>
</table>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_links">Links</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_external">External</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">http://asciidoctor.org - automatic!

http://asciidoctor.org[Asciidoctor]

https://github.com/asciidoctor[Asciidoctor @ *GitHub*]</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 11. Output</div>
<div class="content">
<div class="paragraph">
<p><a href="http://asciidoctor.org" class="bare">http://asciidoctor.org</a> - automatic!</p>
</div>
<div class="paragraph">
<p><a href="http://asciidoctor.org">Asciidoctor</a></p>
</div>
<div class="paragraph">
<p><a href="https://github.com/asciidoctor">Asciidoctor @ <strong>GitHub</strong></a></p>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_relative">Relative</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">link:test.adoc[Docs]</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 12. Output</div>
<div class="content">
<div class="paragraph">
<p><a href="test.adoc">Docs</a></p>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_email_and_irc">Email and IRC</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">devel@discuss.arquillian.org

mailto:devel@discuss.arquillian.org[Discuss Arquillian]

mailto:devel-join@discuss.arquillian.org[Subscribe, Subscribe me, I want to join!]

irc://irc.freenode.org/#asciidoctor</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 13. Output</div>
<div class="content">
<div class="paragraph">
<p><a href="mailto:devel@discuss.arquillian.org">devel@discuss.arquillian.org</a></p>
</div>
<div class="paragraph">
<p><a href="mailto:devel@discuss.arquillian.org">Discuss Arquillian</a></p>
</div>
<div class="paragraph">
<p><a href="mailto:devel-join@discuss.arquillian.org?subject=Subscribe+me&amp;body=I+want+to+join%21">Subscribe</a></p>
</div>
<div class="paragraph">
<p><a href="irc://irc.freenode.org/#asciidoctor" class="bare">irc://irc.freenode.org/#asciidoctor</a></p>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_inline_anchors">Inline anchors</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">[[bookmark-a]]Inline anchors make arbitrary content referenceable.

anchor:bookmark-b[]Use a cross reference to link to this location.</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 14. Output</div>
<div class="content">
<div class="paragraph">
<p><a id="bookmark-a"></a>Inline anchors make arbitrary content referenceable.</p>
</div>
<div class="paragraph">
<p><a id="bookmark-b"></a>Use a cross reference to link to this location.</p>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_internal_cross_references">Internal cross references</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">See &lt;&lt;paragraphs&gt;&gt; to learn how to write paragraphs.

Learn how to organize the document into &lt;&lt;section-titles,sections&gt;&gt;.</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 15. Output</div>
<div class="content">
<div class="paragraph">
<p>See <a href="#paragraphs">[paragraphs]</a> to learn how to write paragraphs.</p>
</div>
<div class="paragraph">
<p>Learn how to organize the document into <a href="#section-titles">sections</a>.</p>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_images">Images</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">image::/images/asciidoc/rose.png[]

image::/images/asciidoc/rose.png[Rose]

[[img-sunset]]

image::/images/asciidoc/rose.png[caption=&#34;Figure 1: &#34;, title=&#34;A rose&#34;, alt=&#34;Rose&#34;, width=&#34;300&#34;, height=&#34;200&#34;, link=&#34;http://www.flickr.com/photos/javh/5448336655&#34;]

image::http://asciidoctor.org/images/octocat.jpg[GitHub mascot]</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 16. Output</div>
<div class="content">
<div class="imageblock">
<div class="content">
<img src="/images/asciidoc/rose.png" alt="rose"/>
</div>
</div>
<div class="imageblock">
<div class="content">
<img src="/images/asciidoc/rose.png" alt="Rose"/>
</div>
</div>
<div id="img-sunset" class="imageblock">
<div class="content">
<a class="image" href="http://www.flickr.com/photos/javh/5448336655"><img src="/images/asciidoc/rose.png" alt="Rose" width="300" height="200"/></a>
</div>
<div class="title">Figure 1: A rose</div>
</div>
<div class="imageblock">
<div class="content">
<img src="http://asciidoctor.org/images/octocat.jpg" alt="GitHub mascot"/>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_admonition_paragraph">Admonition paragraph</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_note">NOTE</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">NOTE: This is a NOTE!</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 17. Output</div>
<div class="content">
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
This is a NOTE!
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_tip">TIP</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">TIP: This is a TIP!</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 18. Output</div>
<div class="content">
<div class="admonitionblock tip">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Tip</div>
</td>
<td class="content">
This is a TIP!
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_warning">WARNING</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">WARNING: This is a WARNING!</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 19. Output</div>
<div class="content">
<div class="admonitionblock warning">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Warning</div>
</td>
<td class="content">
This is a WARNING!
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_caution">CAUTION</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">CAUTION: This is a CAUTION!</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 20. Output</div>
<div class="content">
<div class="admonitionblock caution">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Caution</div>
</td>
<td class="content">
This is a CAUTION!
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_important">IMPORTANT</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">IMPORTANT: This is a IMPORTANT!</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 21. Output</div>
<div class="content">
<div class="admonitionblock important">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Important</div>
</td>
<td class="content">
This is a IMPORTANT!
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_admonition_blocks">Admonition blocks</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">[NOTE]
====
This is an example of an admonition block.
Unlike an admonition paragraph, it may contain any AsciiDoc content.
The style can be any one of the admonition labels:

* NOTE
* TIP
* WARNING
* CAUTION
* IMPORTANT
====</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 22. Output</div>
<div class="content">
<div class="admonitionblock note">
<table>
<tbody><tr>
<td class="icon">
<div class="title">Note</div>
</td>
<td class="content">
<div class="paragraph">
<p>This is an example of an admonition block.
Unlike an admonition paragraph, it may contain any AsciiDoc content.
The style can be any one of the admonition labels:</p>
</div>
<div class="ulist">
<ul>
<li>
<p>NOTE</p>
</li>
<li>
<p>TIP</p>
</li>
<li>
<p>WARNING</p>
</li>
<li>
<p>CAUTION</p>
</li>
<li>
<p>IMPORTANT</p>
</li>
</ul>
</div>
</td>
</tr>
</tbody></table>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_blocks">Blocks</h2>
<div class="sectionbody">
<div class="sect2">
<h3 id="_listing_block">Listing block</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">-----
This is a **_listing block_**
-----</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 23. Output</div>
<div class="content">
<div class="listingblock">
<div class="content">
<pre>This is a **_listing block_**</pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_example_block">Example block</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">=====
This is a **_example block_**
=====</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 24. Output</div>
<div class="content">
<div class="exampleblock">
<div class="content">
<div class="paragraph">
<p>This is a <strong><em>example block</em></strong></p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_comment_block">Comment block</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">////
This is a **_comment block_**
////</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 25. Output</div>
<div class="content">

</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_literal_block">Literal block</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">....
This is a **_literal block_**
....</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 26. Output</div>
<div class="content">
<div class="literalblock">
<div class="content">
<pre>This is a **_literal block_**</pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_pass_block">Pass block</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">++++
== This is raw text
++++</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 27. Output</div>
<div class="content">
== This is raw text
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_quoteverse_block">Quote/Verse block</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">____
This is a very very simple quote
____</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 28. Output</div>
<div class="content">
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>This is a very very simple quote</p>
</div>
</blockquote>
</div>
</div>
</div>
</div>
</div>
<div class="sect3">
<h4 id="_blockqoutes">blockqoutes</h4>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">.After landing the cloaked Klingon bird of prey in Golden Gate park:
[quote,Captain James T. Kirk,Star Trek IV: The Voyage Home]
Everybody remember where we parked.</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 29. Output</div>
<div class="content">
<div class="quoteblock">
<div class="title">After landing the cloaked Klingon bird of prey in Golden Gate park:</div>
<blockquote>
Everybody remember where we parked.
</blockquote>
<div class="attribution">
— Captain James T. Kirk<br/>
<cite>Star Trek IV: The Voyage Home</cite>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_sidebar_block">Sidebar block</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">.Some Title
****
This is a Sidebar block -- I have no idea why it&#39;s called `sidebar`
****</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 30. Output</div>
<div class="content">
<div class="sidebarblock">
<div class="content">
<div class="title">Some Title</div>
<div class="paragraph">
<p>This is a Sidebar block — I have no idea why it’s called <code>sidebar</code></p>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect2">
<h3 id="_block_metadata">Block metadata</h3>
<div class="sidebarblock">
<div class="content">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="asciidoc">.Gettysburg Address
[[gettysburg]]
[quote, Abraham Lincoln, Soldiers&#39; National Cemetery Dedication]
----
Four score and seven years ago our fathers brought forth
on this continent a new nation...
Now we are engaged in a great civil war, testing whether
that nation, or any nation so conceived and so dedicated,
can long endure. ...
----</code></pre>
</div>
</div>
<div class="exampleblock">
<div class="title">Example 31. Output</div>
<div class="content">
<div id="gettysburg" class="listingblock">
<div class="title">Gettysburg Address</div>
<div class="content">
<pre>Four score and seven years ago our fathers brought forth
on this continent a new nation...
Now we are engaged in a great civil war, testing whether
that nation, or any nation so conceived and so dedicated,
can long endure. ...</pre>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_customization_wip">Customization (WIP)</h2>
<div class="sectionbody">

</div>
</div>
<div class="sect1">
<h2 id="_render_wip">Render (WIP)</h2>
<div class="sectionbody">

</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Elixir Programming Language</title>
      <link>https://hossein-lap.github.io/docs/elixir/elixir/</link>
      <pubDate>Tue, 02 Apr 2024 22:09:44 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/docs/elixir/elixir/</guid>
      <description><![CDATA[<div id="preamble">
<div class="sectionbody">
<div class="paragraph">
<p>Elixir is a dynamically-typed functional programming language.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_intractive_elixir_environment">Intractive elixir environment</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="bash"><span style="color: #d0d0d0;background-color: #151515">$ </span>iex</code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_hello_world">Hello World!</h2>
<div class="sectionbody">
<div class="listingblock">
<div class="title">intro.exs</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="elixir"><span style="color: #505050">#!/bin/elixir</span>
<span style="color: #f4bf75">IO</span><span style="color: #d0d0d0">.</span><span style="color: #d0d0d0;background-color: #151515">puts</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Hello&#34;</span> <span style="color: #d0d0d0">&lt;&gt;</span> <span style="color: #90a959">&#34; Elixir!!&#34;</span><span style="color: #d0d0d0">)</span></code></pre>
</div>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_build_tool">Build Tool</h2>
<div class="sectionbody">
<div class="literalblock">
<div class="content">
<pre>mix help
mix new
mix compile
mix test
mix run</pre>
</div>
</div>
<div class="listingblock">
<div class="title">Create</div>
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="bash">mix new example</code></pre>
</div>
</div>
</div>
</div>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>About</title>
      <link>https://hossein-lap.github.io/about/</link>
      <pubDate>Wed, 29 Mar 2023 22:14:09 +0330</pubDate>
      
      <guid>https://hossein-lap.github.io/about/</guid>
      <description><![CDATA[<div class="paragraph">
<p>Hi I’m Hossein</p>
</div>
<div class="listingblock">
<div class="content">
<pre class="rouge highlight" style="color: #d0d0d0;background-color: #151515"><code data-lang="c"><span style="color: #f4bf75">#include</span> <span style="color: #505050">&lt;stdio.h&gt;</span><span style="color: #f4bf75">
</span><span style="color: #d28445">int</span>
<span style="color: #d0d0d0;background-color: #151515">main</span><span style="color: #d0d0d0">(</span><span style="color: #d28445">int</span> <span style="color: #d0d0d0;background-color: #151515">argc</span><span style="color: #d0d0d0">,</span> <span style="color: #d28445">char</span> <span style="color: #d0d0d0">*</span><span style="color: #d0d0d0;background-color: #151515">argv</span><span style="color: #d0d0d0">[])</span>
<span style="color: #d0d0d0">{</span>
	<span style="color: #d0d0d0;background-color: #151515">printf</span><span style="color: #d0d0d0">(</span><span style="color: #90a959">&#34;Hello world!</span><span style="color: #8f5536">\n</span><span style="color: #90a959">&#34;</span><span style="color: #d0d0d0">);</span>
	<span style="color: #aa759f">return</span> <span style="color: #90a959">0</span><span style="color: #d0d0d0">;</span>
<span style="color: #d0d0d0">}</span></code></pre>
</div>
</div>
<div class="paragraph">
<p><code>Lua</code> programmer, (Xe)LaTeX writer, SysAdmin and Linux user.
Yet another minimalist person with a passion about Open Source Software.</p>
</div>
<div class="paragraph">
<p>I was a Computer guy from my early days back in my 1st and 2nd grade.
But all I did was playing video games. Until my dad came to me and said:</p>
</div>
<div class="quoteblock">
<blockquote>
<div class="paragraph">
<p>Don’t just play video games kiddo, it can do much more than that. try to
learn it.</p>
</div>
</blockquote>
</div>
<div class="paragraph">
<p>And that was it. It became the goal of my life :)</p>
</div>
<div class="sect1">
<h2 id="_what_i_know">What I know?</h2>
<div class="sectionbody">
<div class="paragraph">
<p>I have happen to gain some knowledge in programming languages such as:</p>
</div>
<div class="paragraph">
<p>I happened to learn programming languages such as:</p>
</div>
<table class="tableblock frame-all grid-all stretch">
<colgroup>
<col style="width: 50%;"/>
<col style="width: 50%;"/>
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">C</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Lua</p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock">Python</p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock">Bash</p></td>
</tr>
</tbody>
</table>
<div class="paragraph">
<p>By using tools that required a little programming knowledge to modify/configure
or extend.</p>
</div>
</div>
</div>
<div class="sect1">
<h2 id="_tools">Tools</h2>
<div class="sectionbody">
<div class="paragraph">
<p>These tools mostly were <a href="https://suckless.org">suckless</a> tools:</p>
</div>
<table class="tableblock frame-all grid-all stretch">
<colgroup>
<col style="width: 50%;"/>
<col style="width: 50%;"/>
</colgroup>
<tbody>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><a href="https://dwm.suckless.org">dwm</a></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><a href="https://st.suckless.org">st</a></p></td>
</tr>
<tr>
<td class="tableblock halign-left valign-top"><p class="tableblock"><a href="https://tools.suckless.org/dmenu">dmenu</a></p></td>
<td class="tableblock halign-left valign-top"><p class="tableblock"><a href="https://tools.suckless.org/sent">sent</a></p></td>
</tr>
</tbody>
</table>
</div>
</div>
]]></description>
      
    </item>
    
    
    
    
    
    
  </channel>
</rss>
